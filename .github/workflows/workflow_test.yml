name: Galaxy Workflow Tests for push and PR
on: [push, pull_request]
env:
  GALAXY_FORK: galaxyproject
  GALAXY_BRANCH: release_20.09
  MAX_CHUNKS: 4
jobs:
  setup:
    # Shared 100% with tool testing setup
    name: Setup cache and determine changed repositories
    runs-on: ubuntu-latest
    outputs:
      galaxy-head-sha: ${{ steps.get-galaxy-sha.outputs.galaxy-head-sha }}
      commit-range: ${{ steps.discover.outputs.commit-range }}
      repository-list: ${{ steps.discover.outputs.repository-list }}
      tool-list: ${{ steps.discover.outputs.tool-list }}
      chunk-count: ${{ steps.discover.outputs.chunk-count }}
      chunk-list: ${{ steps.discover.outputs.chunk-list }}
    strategy:
      matrix:
        python-version: [3.7]
    steps:
    - name: Print github context properties
      run: |
        echo 'event: ${{ github.event_name }}'
        echo 'sha: ${{ github.sha }}'
        echo 'ref: ${{ github.ref }}'
        echo 'head_ref: ${{ github.head_ref }}'
        echo 'base_ref: ${{ github.base_ref }}'
        echo 'event.before: ${{ github.event.before }}'
        echo 'event.after: ${{ github.event.after }}'
    - name: Determine latest commit in the Galaxy repo
      id: get-galaxy-sha
      run: echo "::set-output name=galaxy-head-sha::$(git ls-remote https://github.com/${{ env.GALAXY_FORK }}/galaxy refs/heads/${{ env.GALAXY_BRANCH }} | cut -f1)"
    - uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache .cache/pip
      uses: actions/cache@v2
      id: cache-pip
      with:
        path: ~/.cache/pip
        key: pip_cache_py_${{ matrix.python-version }}_gxy_${{ steps.get-galaxy-sha.outputs.galaxy-head-sha }}
    - name: Cache .planemo
      uses: actions/cache@v2
      id: cache-planemo
      with:
        path: ~/.planemo
        key: planemo_cache_py_${{ matrix.python-version }}_gxy_${{ steps.get-galaxy-sha.outputs.galaxy-head-sha }}
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Fake a Planemo run to update cache and determine commit range, repositories, and chunks
      uses: bernt-matthias/planemo-ci-action@master
      id: discover
      with:
        create-cache: ${{ steps.cache-pip.outputs.cache-hit != 'true' || steps.cache-planemo.outputs.cache-hit != 'true' }}
        planemo-version: https://github.com/mvdbeek/planemo/archive/allow_testing_dir_of_workflows.zip
        galaxy-fork: ${{ env.GALAXY_FORK }}
        galaxy-branch: ${{ env.GALAXY_BRANCH }}
        max-chunks: ${{ env.MAX_CHUNKS }}
        python-version: ${{ matrix.python-version }}
    - name: Show commit range
      run: echo ${{ steps.discover.outputs.commit-range }}
    - name: Show repository list
      run: echo "${{ steps.discover.outputs.repository-list }}"
    - name: Show tool list
      run: echo "${{ steps.discover.outputs.tool-list }}"
    - name: Show chunks
      run: |
        echo 'Using ${{ steps.discover.outputs.chunk-count }} chunks (${{ steps.discover.outputs.chunk-list }})'

  # Planemo lint the changed repositories
  lint:
    # Only difference with tool linting step is `lint-workflow`
    name: Lint workflows
    needs: setup
    if: needs.setup.outputs.repository-list != ''
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7]
    steps:
    # checkout the repository
    # and use it as the current working directory
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache .cache/pip
      uses: actions/cache@v2
      id: cache-pip
      with:
        path: ~/.cache/pip
        key: pip_cache_py_${{ matrix.python-version }}_gxy_${{ needs.setup.outputs.galaxy-head-sha }}
    - run: echo "${{ needs.setup.outputs.tool-list }}"
    - name: Planemo lint
      uses: bernt-matthias/planemo-ci-action@master
      id: lint
      with:
        lint-workflows: true
        planemo-version: https://github.com/mvdbeek/planemo/archive/allow_testing_dir_of_workflows.zip
        repository-list: ${{ needs.setup.outputs.repository-list }}
        tool-list: ${{ needs.setup.outputs.tool-list }}

  test:
    name: Test workflows
    # This job runs on Linux
    runs-on: ubuntu-latest
    needs: setup
    if: needs.setup.outputs.repository-list != ''
    strategy:
      fail-fast: false
      matrix:
        chunk: ${{ fromJson(needs.setup.outputs.chunk-list) }}
        python-version: [3.7]
    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
    steps:
    # checkout the repository
    # and use it as the current working directory
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache .cache/pip
      uses: actions/cache@v2
      id: cache-pip
      with:
        path: ~/.cache/pip
        key: pip_cache_py_${{ matrix.python-version }}_gxy_${{ needs.setup.outputs.galaxy-head-sha }}
    - name: Cache .planemo
      uses: actions/cache@v2
      id: cache-planemo
      with:
        path: ~/.planemo
        key: planemo_cache_py_${{ matrix.python-version }}_gxy_${{ needs.setup.outputs.galaxy-head-sha }}
#     - run: ./.scripts/setup_cvmfs.sh
    - uses: bernt-matthias/planemo-ci-action@master
      with:
        test-workflows: true
        repository-list: ${{ needs.setup.outputs.repository-list }}
        galaxy-fork: ${{ env.GALAXY_FORK }}
        galaxy-branch: ${{ env.GALAXY_BRANCH }}
        planemo-version: https://github.com/mvdbeek/planemo/archive/allow_testing_dir_of_workflows.zip
        chunk: ${{ matrix.chunk }}
        chunk-count: ${{ needs.setup.outputs.chunk-count }}
    - uses: actions/upload-artifact@v2
      with:
        name: 'Workflow test output ${{ matrix.chunk }}'
        path: upload

  # - combine the results of the test chunks (which will never fail due
  #   to `|| true`) and create a global test report as json and html which
  #   is provided as artifact
  # - check if any tool test actually failed (by lookup in the combined json)
  #   and fail this step if this is the case
  combine_outputs:
    # same as tool step
    name: Combine chunked test results
    needs: [setup, test]
    strategy:
      matrix:
        python-version: [3.7]
    # This job runs on Linux
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v2
      with:
        path: artifacts
    - uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache .cache/pip
      uses: actions/cache@v2
      id: cache-pip
      with:
        path: ~/.cache/pip
        key: pip_cache_py_${{ matrix.python-version }}_gxy_${{ needs.setup.outputs.galaxy-head-sha }}
    - name: Combine outputs
      uses: bernt-matthias/planemo-ci-action@master
      with:
        combine-outputs: true
        html-report: true
        planemo-version: https://github.com/mvdbeek/planemo/archive/allow_testing_dir_of_workflows.zip
        # repositories: ${{ needs.setup.outputs.repositories }}
    - uses: actions/upload-artifact@v2
      with:
        name: 'All tool test results'
        path: upload
    - name: Check outputs
      uses: bernt-matthias/planemo-ci-action@master
      id: check
      with:
        check-outputs: true

  # deploy workflows to organization
  deploy:
    name: Deploy
    needs: [setup,test,combine_outputs]
    strategy:
      matrix:
        python-version: [3.7]
    runs-on: ubuntu-latest
    # TODO if: github.ref == 'refs/heads/master' && github.repository_owner == 'mvdbeek'
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache .cache/pip
      uses: actions/cache@v2
      id: cache-pip
      with:
        path: ~/.cache/pip
        key: pip_cache_py_${{ matrix.python-version }}_gxy_${{ needs.setup.outputs.galaxy-head-sha }}
    - name: Update or create repositories in github namespace
      uses: galaxyproject/planemo-ci-action@master
      with:
        workflow-upload: true
        workflow-namespace: iwc-workflows
        planemo-version: https://github.com/mvdbeek/planemo/archive/allow_testing_dir_of_workflows.zip
        repositort-list: ${{ needs.setup.outputs.repository-list }}
        github-token: ${{ secrets.IWC_WORKFLOWS_BOT_TOKEN }}
